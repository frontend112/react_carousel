{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","itemPosition","setItemPosition","maxItemPosition","length","Math","max","wrapper","useRef","carouselList","useEffect","current","style","width","transform","transition","toString","className","type","onClick","position","cn","disabled","ref","map","image","index","src","alt","App","carouselElements","setCarouselElements","handleChange","event","target","value","id","state","htmlFor","onChange","min","name","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6dbc087.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport cn from 'classnames';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [itemPosition, setItemPosition] = useState(0);\n\n  const maxItemPosition = images.length - Math.max(frameSize, step);\n\n  const wrapper = useRef<HTMLDivElement>(null);\n\n  const carouselList = useRef<HTMLUListElement>(null);\n\n  const handlePrevClick = () => {\n    if (itemPosition > 0) {\n      setItemPosition(position => position - step);\n    }\n\n    if (infinite && itemPosition === 0) {\n      setItemPosition(maxItemPosition);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (itemPosition < maxItemPosition) {\n      setItemPosition(position => position + step);\n    }\n\n    if (infinite && itemPosition === maxItemPosition) {\n      setItemPosition(0);\n    }\n  };\n\n  useEffect(() => {\n    if (itemPosition > maxItemPosition) {\n      setItemPosition(maxItemPosition);\n    }\n\n    if (itemPosition < 0) {\n      setItemPosition(0);\n    }\n\n    if (wrapper && wrapper.current) {\n      wrapper.current.style.width = `${itemWidth * frameSize}px`;\n    }\n\n    if (carouselList && carouselList.current) {\n      carouselList.current.style.transform\n      = `translateX(${(-itemPosition) * itemWidth}px)`;\n\n      carouselList.current.style.transition = `${animationDuration.toString()}ms`;\n    }\n  }, [itemPosition, frameSize, animationDuration, itemWidth]);\n\n  return (\n    <div className=\"Carousel\">\n      <button\n        type=\"button\"\n        onClick={handlePrevClick}\n        className={cn(\n          'Carousel__arrow Carousel__arrow--prev',\n          {\n            disabled: !infinite && itemPosition === 0,\n          },\n        )}\n      >\n        {'<='}\n      </button>\n      <div className=\"Carousel__list-wrapper\" ref={wrapper}>\n        <ul className=\"Carousel__list\" ref={carouselList}>\n          {\n            images.map((image, index) => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={index.toString()}\n                  width={itemWidth}\n                  className=\"Carousel__image\"\n                />\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={handleNextClick}\n        data-cy=\"next\"\n        className={cn(\n          'Carousel__arrow Carousel__arrow--next',\n          {\n            disabled: !infinite && itemPosition === maxItemPosition,\n          },\n        )}\n      >\n        {'=>'}\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { FC, ChangeEvent, useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst App: FC = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [carouselElements, setCarouselElements] = useState(\n    {\n      step: 2,\n      frameSize: 3,\n      itemWidth: 130,\n      animationDuration: 1000,\n      infinite: false,\n    },\n  );\n\n  const {\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n    infinite,\n  } = carouselElements;\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value, id } = event.target;\n\n    if (id === 'infinite') {\n      setCarouselElements(state => (\n        {\n          ...state,\n          infinite: !state.infinite,\n        }\n      ));\n\n      return;\n    }\n\n    setCarouselElements(state => (\n      {\n        ...state,\n        [id]: +value,\n      }\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        Carousel with\n        {images.length}\n      </h1>\n\n      <div className=\"container\">\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"itemWidth\">Item Width:</label>\n        <input\n          type=\"number\"\n          value={itemWidth}\n          onChange={handleChange}\n          id=\"itemWidth\"\n          min=\"0\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"frameSize\">Frame size:</label>\n        <input\n          type=\"number\"\n          value={frameSize}\n          onChange={handleChange}\n          id=\"frameSize\"\n          min=\"0\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"step\">step:</label>\n        <input\n          type=\"number\"\n          value={step}\n          onChange={handleChange}\n          id=\"step\"\n          min=\"0\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"animationDuration\">animation duration:</label>\n        <input\n          type=\"number\"\n          value={animationDuration}\n          onChange={handleChange}\n          id=\"animationDuration\"\n          min=\"0\"\n        />\n      </div>\n\n      <form>\n        <label htmlFor=\"infinite\">infinite:</label>\n        <input\n          type=\"checkbox\"\n          name=\"infinite\"\n          id=\"infinite\"\n          onChange={handleChange}\n          checked={infinite === true}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}