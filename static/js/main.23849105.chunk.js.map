{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","itemPosition","useEffect","document","querySelector","style","width","className","map","image","index","src","alt","toString","type","onClick","console","log","carousel","transform","handlePrevClick","maxItemPosition","length","handleNextClick","App","state","animationDuration","handleChange","event","key","input","target","value","setState","this","htmlFor","onChange","id","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.23849105.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  // infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  // infinite,\n}) => {\n  let itemPosition = 0;\n\n  const handlePrevClick = () => {\n    console.log(itemPosition);\n    const carousel = document\n      .querySelector('.Carousel__list') as HTMLBodyElement;\n\n    // const minItemPosition = step;\n\n    switch (true) {\n      case itemPosition === 0:\n        return;\n      case itemPosition >= step:\n        itemPosition -= step;\n\n        carousel.style.transform\n        = `translateX(${-itemWidth * (itemPosition)}px)`;\n        break;\n      default:\n        itemPosition = 0;\n\n        carousel.style.transform = 'translateX(0}px)';\n        break;\n    }\n  };\n\n  const handleNextClick = () => {\n    console.log(itemPosition);\n    const carousel = document\n      .querySelector('.Carousel__list') as HTMLBodyElement;\n\n    const maxItemPosition = images.length - step - 1;\n\n    switch (true) {\n      case itemPosition >= images.length:\n        return;\n      case itemPosition + step < maxItemPosition:\n        itemPosition += step;\n\n        carousel.style.transform\n        = `translateX(${-itemWidth * (itemPosition)}px)`;\n        break;\n      default:\n        itemPosition = maxItemPosition;\n\n        carousel.style.transform\n        = `translateX(${-itemWidth * (images.length - frameSize)}px)`;\n        break;\n    }\n  };\n\n  useEffect(() => {\n    const CarouselList = document\n      .querySelector('.Carousel') as HTMLBodyElement;\n\n    CarouselList.style.width = `${itemWidth * frameSize}px`;\n  }, [itemWidth, frameSize]);\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\">\n        {\n          images.map((image, index) => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={index.toString()}\n                width={itemWidth}\n                className=\"Carousel__image\"\n              />\n            </li>\n          ))\n        }\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={() => handlePrevClick()}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => handleNextClick()}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  // infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 2,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    // infinite: false,\n  };\n\n  handleChange = (event: ChangeEvent<HTMLInputElement>, key: string) => {\n    const input = event.target.value;\n\n    this.setState(state => (\n      {\n        ...state,\n        [key]: +input,\n      }\n    ));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      // infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          // animationDuration={1000}\n          // infinite={infinite}\n        />\n        <div>\n          <label htmlFor=\"itemWidth\">Item Width:</label>\n          <input\n            type=\"number\"\n            value={itemWidth}\n            onChange={(event) => this.handleChange(event, 'itemWidth')}\n            id=\"itemWidth\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"frameSize\">Frame size:</label>\n          <input\n            type=\"number\"\n            value={frameSize}\n            onChange={(event) => this.handleChange(event, 'frameSize')}\n            id=\"frameSize\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"step\">step:</label>\n          <input\n            type=\"number\"\n            value={step}\n            onChange={(event) => this.handleChange(event, 'step')}\n            id=\"step\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"animationDuration\">Animation duration:</label>\n          <input\n            type=\"number\"\n            value={animationDuration}\n            onChange={(event) => this.handleChange(event, 'animationDuration')}\n            id=\"animationDuration\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}